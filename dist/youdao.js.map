{"version":3,"file":"youdao.js","sources":["../src/youdao.js"],"sourcesContent":["// #!/usr/bin/env node\n// 命令行有道翻译\nconst { program } = require('commander')\nconst Table = require('cli-table2') // 表格输出\nconst superagent = require('superagent') // http请求\nconst Printer = require('@darkobits/lolcatjs')\nconst figlet = require('figlet')\nconst Configstore = require('configstore')\nconst chalk = require('chalk')\n\nconst conf = new Configstore('youdaoTom')\n\nconst DEFAULT_API_KEYS = {\n    key: 868480929,\n    keyfrom: 'toaijf'\n}\n\nconst key = conf.get('key') || DEFAULT_API_KEYS.key\nconst keyfrom = conf.get('keyfrom') || DEFAULT_API_KEYS.keyfrom\n\nconst packages = require('../package.json')\n\nconst { version: VERSION } = packages\nconst logo = figlet.textSync('Youdao')\nconst logoPrinter = Printer.fromString(\n    `\\n=========================================   \\n 汤姆的youdao翻译${VERSION}\\n\\n${logo}\\n=========================================`\n)\n\nconst validJSON = (json) => {\n    try {\n        JSON.parse(json)\n        return true\n    } catch (err) {\n        return false\n    }\n}\n\nprogram\n    .allowUnknownOption()\n    .version(logoPrinter, '-V, --version')\n    .usage('translator <cmd> [input]')\n\nconst url = `http://fanyi.youdao.com/openapi.do?keyfrom=${keyfrom}&key=${key}&type=data&doctype=json&version=1.1`\n\nprogram\n    .command('set')\n    .description('config key,keyfrom')\n    .requiredOption('-key,--key <string>', 'youdao api key')\n    .requiredOption('-keyfrom,--keyfrom <string>', 'youdao api keyfrom')\n    .action((options) => {\n        console.log('cmd', options, options.key)\n        conf.set('key', options.key)\n        conf.set('keyfrom', options.keyfrom)\n    })\n\nprogram\n    .command('query', { isDefault: true })\n    .description('translate query')\n    .action((cmd, obj) => {\n        const word = obj.args?.join(' ')\n        superagent\n            .get(url)\n            .query({\n                q: word\n            })\n            .end((err, res) => {\n                if (err) {\n                    console.log('excuse me, try again')\n                    return false\n                }\n\n                try {\n                    if (!validJSON(res.text)) {\n                        console.log(`\\n ${chalk.red('有道翻译API出错信息:')}`)\n                        console.log(\n                            `\\n${'💔'.repeat(\n                                3\n                            )}来自您key的翻译API请求异常频繁，为保护其他用户的正常访问，只能暂时禁止您目前key的访问\\n`\n                        )\n\n                        console.log(\n                            `\\n你可以使用 ${chalk.red(\n                                'youdaotom set -key xxx -keyfrom yyy'\n                            )} 命令来配置你自己在网易申请的key和keyfrom,或者几个小时后再尝试，随着本npm包下载的用户数越多，很容易超出网易的限制\\n`\n                        )\n                        return false\n                    }\n                    const data = JSON.parse(res.text)\n                    const result = {}\n                    // 返回的数据处理\n                    if (data.basic) {\n                        result[word] = data.basic.explains\n                    } else if (data.translation) {\n                        result[word] = data.translation\n                    } else {\n                        console.error('error')\n                    }\n                    console.log()\n                    // 输出表格\n                    const table = new Table()\n                    table.push(result)\n                    console.log(table.toString())\n                } catch (error) {\n                    console.log(error.toString())\n                }\n            })\n    })\nif (!process.argv[2]) {\n    console.log(logoPrinter)\n    program.help()\n}\nprogram.parse(process.argv)\n"],"names":["program","require","Table","superagent","Printer","figlet","Configstore","chalk","conf","DEFAULT_API_KEYS","key","get","keyfrom","packages","version","VERSION","logo","textSync","logoPrinter","fromString","allowUnknownOption","usage","url","command","description","requiredOption","action","options","console","log","set","isDefault","cmd","obj","word","args","_obj$args","join","query","q","end","err","res","json","JSON","parse","validJSON","text","red","repeat","data","result","basic","explains","translation","error","table","push","toString","process","argv","help"],"mappings":"aAEA,IAAMA,QAAEA,GAAYC,QAAQ,aACtBC,EAAQD,QAAQ,cAChBE,EAAaF,QAAQ,cACrBG,EAAUH,QAAQ,uBAClBI,EAASJ,QAAQ,UACjBK,EAAcL,QAAQ,eACtBM,EAAQN,QAAQ,SAEhBO,EAAO,IAAIF,EAAY,aAEvBG,EACG,UADHA,EAEO,SAGPC,EAAMF,EAAKG,IAAI,QAAUF,EACzBG,EAAUJ,EAAKG,IAAI,YAAcF,EAEjCI,EAAWZ,QAAQ,oBAEjBa,QAASC,GAAYF,EACvBG,EAAOX,EAAOY,SAAS,UACvBC,EAAcd,EAAQe,iFACuCJ,iBAAcC,kDAYjFhB,EACKoB,qBACAN,QAAQI,EAAa,iBACrBG,MAAM,4BAEX,IAAMC,uDAAoDV,kBAAeF,yCAEzEV,EACKuB,QAAQ,OACRC,YAAY,sBACZC,eAAe,sBAAuB,kBACtCA,eAAe,8BAA+B,sBAC9CC,QAAQC,IACLC,QAAQC,IAAI,MAAOF,EAASA,EAAQjB,KACpCF,EAAKsB,IAAI,MAAOH,EAAQjB,KACxBF,EAAKsB,IAAI,UAAWH,EAAQf,YAGpCZ,EACKuB,QAAQ,QAAS,CAAEQ,WAAW,IAC9BP,YAAY,mBACZE,QAAO,CAACM,EAAKC,WACJC,YAAOD,EAAIE,yBAAJC,EAAUC,KAAK,KAC5BlC,EACKQ,IAAIW,GACJgB,MAAM,CACHC,EAAGL,IAENM,KAAI,CAACC,EAAKC,QACHD,SACAb,QAAQC,IAAI,yBACL,WAxCRc,eAEXC,KAAKC,MAAMF,IACJ,EACT,MAAOF,UACE,IAuCUK,CAAUJ,EAAIK,aACfnB,QAAQC,iBAAUtB,EAAMyC,IAAI,kBAC5BpB,QAAQC,gBACC,KAAKoB,OACN,yDAIRrB,QAAQC,sBACOtB,EAAMyC,IACb,+GAGD,MAELE,EAAON,KAAKC,MAAMH,EAAIK,MACtBI,EAAS,GAEXD,EAAKE,MACLD,EAAOjB,GAAQgB,EAAKE,MAAMC,SACnBH,EAAKI,YACZH,EAAOjB,GAAQgB,EAAKI,YAEpB1B,QAAQ2B,MAAM,SAElB3B,QAAQC,UAEF2B,EAAQ,IAAItD,EAClBsD,EAAMC,KAAKN,GACXvB,QAAQC,IAAI2B,EAAME,YACpB,MAAOH,GACL3B,QAAQC,IAAI0B,EAAMG,mBAIjCC,QAAQC,KAAK,KACdhC,QAAQC,IAAIX,GACZlB,EAAQ6D,QAEZ7D,EAAQ6C,MAAMc,QAAQC"}